[ ] getCount(Query):int does select count(t1.*) from Book t1 where <query>
[ ] orphan RefN fix Map<Class,List<MetaRelRefN>> in Db, delete from <relRefTable> where <toId>=<deletedObjectId>
[ ]   test case
[ ] removing referenced DbObject Map<Class,List<RelRef>>. check and possibly fail or update to null?
[.] foreign key? implemented in Db.
[x]   cascade delete? recursively get() and delete
[ ]     cascade delete with "delete from ... where ..." if aggregated does not have any Agg,AggN,RefN itself
[ ] Index(DbField...)
[x]    Collation asc
[ ]    Collation desc
[.] Query(IndexFt,String)
[x]   IN BOOLEAN MODE (default)
[ ]   IN NATURAL LANGUAGE MODE
[ ]   IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION
[ ]   WITH QUERY EXPANSION
[x] datetime field
[ ]   FldTimestamp range of min=1970-01-01 01:00:01.0 and max=2038-01-19 04:14:07 too limited?
[ ]   FldTimestamp using java.sql type. ok?
[ ] check RelRef.set(id) vs RelRef.set(DbObject) check type? requires get() for id. still not safe. maybe when Db.mode_safe_ref_set=true
[ ] check index fields
[ ]   drop and recreate index if mismatch
[ ] check columns to match fields order and type
[ ]   to add new column: alter table <tableName> add <columnName columnDef>
[ ]   if columns order do not match fields see: https://stackoverflow.com/questions/2934312/how-to-rearrange-mysql-columns
[ ]   if column type has changed: ALTER TABLE table_name MODIFY COLUMN column_name datatype 
[ ] id field to bigint?
[ ] inheritance
[ ]   example: select t1.* from File where t1.clspth like 'aaabbb%'; selects all objects that are File or inherits from File 
[ ] class OID instead of integer
[ ] test cases
[ ]   create
[ ]   get
[ ]     no query
[ ]     query
[ ]       fulltext
[ ]   update
[ ]   delete 
[ ] ?	@SuppressWarnings({ "unchecked", "rawtypes" })// ? ugly vs comfort
		public List<File> getFiles(final Query qry, final Order ord, final Limit lmt) {
			return (List<File>) (List) files.get(this, qry, ord, lmt);
		} 
[ ] FldString check string length vs field length at set? DbField.getSize()?
[ ] Db.tableNameForJavaClass does not include package name
[ ] Db.instance().makeConsistent() deleting RefN orphans, setting null on missing Ref etc 
[ ] cluster
[ ]   connections to multiple servers
[ ]   write to all
[ ]   read round robin
[ ] refactor commands. example: rename main.User main.Person, rename main.User.name fullName, delete main.User.hashCode etc
[.] drivers for other (open source) rdbms. see https://www.databasestar.com/sql-data-types/
[x]   mysql
[ ]   sqlite
[ ]   postgresql
[ ]   oracle?
[ ]   ms sql server?
[ ]   ibm db2?

[x] delete
[x]    cascade
[x] transaction.get
[x] condition
[x]   join // select t2.* from User as t1,File as t2 where t1.id=t2.User_files;
[x]   AggN
[x]   RefN
[x]   Ref
[x]   Agg
[x] order
[x]   table ref
[x] limit
[x] cache
[x]   DbTransaction.cache_enabled
[x] blob field
[x]   mysql hex
[x] clob field LONGTEXT
[x] full text search
[x]   IndexFullText(DbField...)
[x] bool field
[x] float field
[x]   set 1.2f then query 1.2f does not work. see 
         https://dev.mysql.com/doc/refman/8.0/en/floating-point-types.html
         https://dev.mysql.com/doc/refman/8.0/en/problems-with-float.html
[x] double field
[x] indexes
[x]   RefN
[x]   AggN
[x] Query.LIKE
[x] check string lengths when setting varchar fields? resolved: generates sql exception in driver
[x] RefN remove object
[x] AggN delete object
[x] Agg delete object
[x] Ref remove object
[x] AggN get
[x] import test data from csv
[x] create table: innodb utf8. resolved: utf8mb4 is better. specified by sysadm when creating database
[x] csv reader
[x] larger sample data
[x] more escapes for string in FldString, FldClob, Query
[x] RefN get
[x] profiling
[x]   create
[x]   get
[x]   delete
